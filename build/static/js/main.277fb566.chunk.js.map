{"version":3,"sources":["components/person.js","services/contacts.js","App.js","index.js"],"names":["Person","props","persons","state","search","length","react_default","a","createElement","filter","person","name","toLowerCase","includes","map","key","id","number","onClick","remover","baseUrl","contacts","getAll","axios","get","create","newPerson","post","update","updatedPerson","put","concat","then","response","data","remove","delete","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addPerson","event","preventDefault","personObj","newName","newNum","pers","index","findIndex","per","contactService","console","log","setState","inputName","target","value","inputNum","window","confirm","_this2","catch","error","alert","onChange","onSubmit","type","components_person","React","Component","ReactDOM","render","src_App","document","getElementById","promise"],"mappings":"iOA0BeA,EAxBA,SAACC,GACd,IAAMC,EAAUD,EAAME,MAAMD,QACtBE,EAASH,EAAME,MAAMC,OAC3B,OAAsB,IAAnBF,EAAQG,OAEPC,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACGN,EAAQO,OAAO,SAAAC,GAAM,OACpBA,EAAOC,KAAKC,cACXC,SAAST,EAAOQ,iBAAgBE,IAAI,SAAAJ,GAAM,OAC3CJ,EAAAC,EAAAC,cAAA,MAAIO,IAAKL,EAAOM,IACZV,EAAAC,EAAAC,cAAA,UAAKE,EAAOC,MACZL,EAAAC,EAAAC,cAAA,UAAKE,EAAOO,QACZX,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAQU,QAASjB,EAAMkB,QAAQT,EAAOM,GAAIN,EAAOC,OAAjD,gBAONL,EAAAC,EAAAC,cAAA,wCCtBRY,EAAU,eAmBDC,EAAA,CAACC,OAjBD,WACb,OAAOC,IAAMC,IAAIJ,IAgBKK,OAbT,SAACC,GACd,OAAOH,IAAMI,KAAKP,EAASM,IAYGE,OATjB,SAACZ,EAAIa,GAElB,OADgBN,IAAMO,IAAN,GAAAC,OAAaX,EAAb,KAAAW,OAAwBf,GAAMa,GAC/BG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAOHC,OAJzB,SAACnB,GACd,OAAOO,IAAMa,OAAN,GAAAL,OAAgBX,EAAhB,KAAAW,OAA2Bf,MCwFrBqB,cApGb,SAAAA,EAAYpC,GAAO,IAAAqC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMxC,KAqBR4C,UAAY,SAACC,GACXA,EAAMC,iBACN,IAAMC,EAAY,CAACrC,KAAM2B,EAAKnC,MAAM8C,QAAShC,OAAQqB,EAAKnC,MAAM+C,QAC5DhD,EAAUoC,EAAKnC,MAAMD,QACzB,GAAIA,EAAQY,IAAI,SAAAqC,GAAI,OAAIA,EAAKxC,OAAME,SAASmC,EAAUrC,MAWlD,CACF,IAAMyC,EAAQd,EAAKnC,MAAMD,QAAQmD,UAAU,SAAAC,GAAG,OAAIA,EAAI3C,OAASqC,EAAUrC,OACnEK,EAAKsB,EAAKnC,MAAMD,QAAQkD,GAAOpC,GACrCuC,EACG3B,OAAOZ,EAAIgC,GACXhB,KAAK,SAAAtB,GACJ8C,QAAQC,IAAI/C,EAAOM,IACnB,IAAMd,EAAUoC,EAAKnC,MAAMD,QAAQO,OAAO,SAAA0C,GAAI,OAAIA,EAAKnC,KAAOA,IAC9DsB,EAAKoB,SAAS,CACZxD,QAASA,EAAQ6B,OAAOrB,GACxBuC,QAAS,GACTC,OAAQ,YArBdK,EACG9B,OAAOuB,GACPhB,KAAK,SAAAC,GACJK,EAAKoB,SAAS,CACZxD,QAASA,EAAQ6B,OAAOE,EAASC,MACjCe,QAAS,GACTC,OAAQ,QAjCCZ,EAsDnBqB,UAAY,SAACb,GACXR,EAAKoB,SAAS,CAACT,QAASH,EAAMc,OAAOC,SAvDpBvB,EAyDnBwB,SAAW,SAAChB,GACVR,EAAKoB,SAAS,CAACR,OAAQJ,EAAMc,OAAOC,SA1DnBvB,EA6DnBlC,OAAS,SAAC0C,GACRR,EAAKoB,SAAS,CAACtD,OAAQ0C,EAAMc,OAAOC,SA9DnBvB,EAiEnBnB,QAAU,SAACH,EAAIL,GACb,OAAM,WACDoD,OAAOC,QAAQ,gBAAkBrD,IAClC4C,EACGpB,OAAOnB,GACPgB,KAAK,SAAAC,GACJK,EAAKoB,SAAS,CACZxD,QAASoC,EAAKnC,MAAMD,QAAQO,OAAO,SAAA6C,GAAG,OAAIA,EAAItC,KAAOA,UAtE/DsB,EAAKnC,MAAQ,CACXD,QAAS,GACT+C,QAAS,GACTC,OAAQ,GACR9C,OAAQ,IANOkC,mFAUA,IAAA2B,EAAAxB,KACjBe,QAAQC,IAAI,aACZF,EACGjC,SACAU,KAAK,SAAAC,GACJgC,EAAKP,SAAS,CAACxD,QAAS+B,EAASC,SAElCgC,MAAM,SAAAC,GACLC,MAAM,+CA8DV,OACE9D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,sBAAaF,EAAAC,EAAAC,cAAA,SAAOqD,MAAOpB,KAAKtC,MAAMC,OAAQiE,SAAU5B,KAAKrC,UAE7DE,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,QAAM8D,SAAU7B,KAAKI,WACnBvC,EAAAC,EAAAC,cAAA,oBAAWF,EAAAC,EAAAC,cAAA,SAAOqD,MAAOpB,KAAKtC,MAAM8C,QAASoB,SAAU5B,KAAKkB,aAC5DrD,EAAAC,EAAAC,cAAA,sBAAaF,EAAAC,EAAAC,cAAA,SAAOqD,MAAOpB,KAAKtC,MAAM+C,OAAQmB,SAAU5B,KAAKqB,YAC7DxD,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,UAAQ+D,KAAK,UAAb,iBAEPjE,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgE,EAAD,CAAQrE,MAAOsC,KAAKtC,MAAOgB,QAASsB,KAAKtB,mBA9FjCsD,IAAMC,WCCxBC,IAASC,OACPtE,EAAAC,EAAAC,cAACqE,EAAD,MACAC,SAASC,eAAe,SAE1B,IAAMC,EAAUzD,IAAMC,IAAI,qCAC1BgC,QAAQC,IAAIuB","file":"static/js/main.277fb566.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Person = (props) => {\r\n  const persons = props.state.persons\r\n  const search = props.state.search\r\n  if(persons.length !== 0){\r\n    return(\r\n      <table>\r\n        <tbody>\r\n          {persons.filter(person =>\r\n            person.name.toLowerCase()\r\n            .includes(search.toLowerCase())).map(person =>\r\n            <tr key={person.id}>\r\n                <td>{person.name}</td>\r\n                <td>{person.number}</td>\r\n                <td>\r\n                    <button onClick={props.remover(person.id, person.name)}>poista</button>\r\n                </td>\r\n            </tr>)}\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n  else return <p>luettelossa ei ole tietoja</p>\r\n}\r\n\r\nexport default Person\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = (newPerson) => {\r\n  return axios.post(baseUrl, newPerson)\r\n}\r\n\r\nconst update = (id, updatedPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, updatedPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default {getAll, create, update, remove}\r\n","import React from 'react';\r\nimport Person from './components/person'\r\nimport contactService from './services/contacts'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      persons: [],\r\n      newName: '',\r\n      newNum: '',\r\n      search: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log('did mount')\r\n    contactService\r\n      .getAll()\r\n      .then(response => {\r\n        this.setState({persons: response.data})\r\n      })\r\n      .catch(error => {\r\n        alert(\"ei dataa\")\r\n      })\r\n  }\r\n\r\n  addPerson = (event) => {\r\n    event.preventDefault()\r\n    const personObj = {name: this.state.newName, number: this.state.newNum}\r\n    let persons = this.state.persons\r\n    if(!persons.map(pers => pers.name).includes(personObj.name)){\r\n      contactService\r\n        .create(personObj)\r\n        .then(response => {\r\n          this.setState({\r\n            persons: persons.concat(response.data),\r\n            newName: '',\r\n            newNum: ''\r\n          })\r\n        })\r\n    }\r\n    else{\r\n      const index = this.state.persons.findIndex(per => per.name === personObj.name)\r\n      const id = this.state.persons[index].id\r\n      contactService\r\n        .update(id, personObj)\r\n        .then(person => {\r\n          console.log(person.id)\r\n          const persons = this.state.persons.filter(pers => pers.id !== id)\r\n          this.setState({\r\n            persons: persons.concat(person),\r\n            newName: '',\r\n            newNum: ''\r\n          })\r\n        })\r\n    }\r\n  }\r\n\r\n  inputName = (event) => {\r\n    this.setState({newName: event.target.value })\r\n  }\r\n  inputNum = (event) => {\r\n    this.setState({newNum: event.target.value})\r\n  }\r\n\r\n  search = (event) => {\r\n    this.setState({search: event.target.value})\r\n  }\r\n\r\n  remover = (id, name) => {\r\n    return() => {\r\n      if(window.confirm(\"poistetaanko \" + name)){\r\n        contactService\r\n          .remove(id)\r\n          .then(response => {\r\n            this.setState({\r\n              persons: this.state.persons.filter(per => per.id !== id)\r\n            })\r\n          })\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Puhelinluettelo</h2>\r\n        <div>search: <input value={this.state.search} onChange={this.search}/></div>\r\n\r\n        <h2>Lis채채 uusi</h2>\r\n        <form onSubmit={this.addPerson}>\r\n          <div>nimi: <input value={this.state.newName} onChange={this.inputName}/></div>\r\n          <div>numero: <input value={this.state.newNum} onChange={this.inputNum}/></div>\r\n          <div><button type=\"submit\">lis채채</button></div>\r\n        </form>\r\n        <h2>Numerot</h2>\r\n        <div>\r\n          <Person state={this.state} remover={this.remover}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport App from './App.js';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\nconst promise = axios.get('http://localhost:3001/api/persons')\nconsole.log(promise)\n"],"sourceRoot":""}