{"version":3,"sources":["components/person.js","services/contacts.js","App.js","index.js"],"names":["Person","props","persons","state","search","filtered","filter","pers","name","toLowerCase","includes","length","map","react_default","a","createElement","key","id","number","onClick","remover","baseUrl","contacts","getAll","axios","get","create","newPerson","post","update","updatedPerson","put","concat","then","response","data","remove","delete","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addPerson","event","preventDefault","personObj","newName","newNum","index","findIndex","per","contactService","person","console","log","setState","inputName","target","value","inputNum","window","confirm","_this2","catch","error","alert","onChange","onSubmit","type","React","Component","ReactDOM","render","src_App","document","getElementById","promise"],"mappings":"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","file":"static/js/main.78cd86d5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Person = (props) => {\r\n  const persons = props.state.persons\r\n  const search = props.state.search\r\n  const filtered = persons.filter(pers =>\r\n    pers.name.toLowerCase().includes(search.toLowerCase()))\r\n  if(persons.length !== 0){\r\n    return(\r\n      filtered.map(pers =>\r\n        <p key={pers.id}> {pers.name} {pers.number} <button onClick =\r\n          {props.remover(pers.id,pers.name)}>poista</button></p>)\r\n    )\r\n  }\r\n  else return <p>luettelossa ei ole tietoja</p>\r\n}\r\n\r\nexport default Person\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = (newPerson) => {\r\n  return axios.post(baseUrl, newPerson)\r\n}\r\n\r\nconst update = (id, updatedPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, updatedPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default {getAll, create, update, remove}\r\n","import React from 'react';\r\nimport Person from './components/person'\r\nimport contactService from './services/contacts'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      persons: [],\r\n      newName: '',\r\n      newNum: '',\r\n      search: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log('did mount')\r\n    contactService\r\n      .getAll()\r\n      .then(response => {\r\n        this.setState({persons: response.data})\r\n      })\r\n      .catch(error => {\r\n        alert(\"ei dataa\")\r\n      })\r\n  }\r\n\r\n  addPerson = (event) => {\r\n    event.preventDefault()\r\n    const personObj = {name: this.state.newName, number: this.state.newNum}\r\n    let persons = this.state.persons\r\n    if(!persons.map(pers => pers.name).includes(personObj.name)){\r\n      contactService\r\n        .create(personObj)\r\n        .then(response => {\r\n          this.setState({\r\n            persons: response.data,\r\n            newName: '',\r\n            newNum: ''\r\n          })\r\n        })\r\n    }\r\n    else{\r\n      const index = this.state.persons.findIndex(per => per.name === personObj.name)\r\n      const id = this.state.persons[index].id\r\n      contactService\r\n        .update(id, personObj)\r\n        .then(person => {\r\n          console.log(person.id)\r\n          const persons = this.state.persons.filter(pers => pers.id !== id)\r\n          this.setState({\r\n            persons: persons.concat(person),\r\n            newName: '',\r\n            newNum: ''\r\n          })\r\n        })\r\n    }\r\n  }\r\n\r\n  inputName = (event) => {\r\n    this.setState({newName: event.target.value })\r\n  }\r\n  inputNum = (event) => {\r\n    this.setState({newNum: event.target.value})\r\n  }\r\n\r\n  search = (event) => {\r\n    this.setState({search: event.target.value})\r\n  }\r\n\r\n  remover = (id, name) => {\r\n    return() => {\r\n      if(window.confirm(\"poistetaanko \" + name)){\r\n        contactService\r\n          .remove(id)\r\n          .then(response => {\r\n            this.setState({\r\n              persons: this.state.persons.filter(per => per.id !== id)\r\n            })\r\n          })\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Puhelinluettelo</h2>\r\n        <div>search: <input value={this.state.search} onChange={this.search}/></div>\r\n\r\n        <h2>Lis채채 uusi</h2>\r\n        <form onSubmit={this.addPerson}>\r\n          <div>nimi: <input value={this.state.newName} onChange={this.inputName}/></div>\r\n          <div>numero: <input value={this.state.newNum} onChange={this.inputNum}/></div>\r\n          <div><button type=\"submit\">lis채채</button></div>\r\n        </form>\r\n        <h2>Numerot</h2>\r\n        <div>\r\n          <Person state={this.state} remover={this.remover}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport App from './App.js';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\nconst promise = axios.get('http://localhost:3001/api/persons')\nconsole.log(promise)\n"],"sourceRoot":""}